// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int         @id @default(autoincrement())
  name       String
  email      String      @unique
  password   String
  Sessions   Sessions[]
  UserImages UserImages?
  Purchases  Purchases[]

  @@map("users")
}

model Sessions {
  id           Int    @id @default(autoincrement())
  users        Users  @relation(fields: [userId], references: [id])
  userId       Int
  refreshToken String @unique
  accessToken  String @unique

  @@map("sessions")
}

model Supermarkets {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  ProductsMarkets ProductsMarkets[]

  @@map("supermarkets")
}

model Products {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  urlImage        String            @unique
  ProductsMarkets ProductsMarkets[]
  Purchases       Purchases[]

  @@map("products")
}

model UserImages {
  id       Int    @id @default(autoincrement())
  userId   Int    @unique
  user     Users  @relation(fields: [userId], references: [id])
  urlImage String

  @@map("userImages")
}

model ProductsMarkets {
  id            Int          @id @default(autoincrement())
  product       Products     @relation(fields: [productId], references: [id])
  productId     Int
  supermarket   Supermarkets @relation(fields: [supermarketId], references: [id])
  supermarketId Int
  price         Float

  @@map("productsMarkets")
}

model Purchases {
  id        Int      @id @default(autoincrement())
  product   Products @relation(fields: [productId], references: [id])
  productId Int
  user      Users    @relation(fields: [userId], references: [id])
  userId    Int

  @@map("purchases")
}
