generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int         @id @default(autoincrement())
  name       String
  email      String      @unique
  password   String
  Purchases  Purchases[]
  Sessions   Sessions[]
  UserImages UserImages?
  UserPhones UserPhones?
  UserAdress UserAdress?

  @@map("users")
}

model Sessions {
  id           Int    @id @default(autoincrement())
  userId       Int
  refreshToken String @unique
  accessToken  String @unique
  users        Users  @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model Supermarkets {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  ProductsMarkets ProductsMarkets[]

  @@map("supermarkets")
}

model Products {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  urlImage        String            @unique
  ProductsMarkets ProductsMarkets[]
<<<<<<< HEAD
  Purchases       Purchases[]
=======
  purchases       Purchases[]       @relation("productsTopurchases")
>>>>>>> 9850a1cff27b347014ce607076985b18b13b7410

  @@map("products")
}

model UserImages {
  id       Int    @id @default(autoincrement())
  userId   Int    @unique
  urlImage String
  user     Users  @relation(fields: [userId], references: [id])

  @@map("userImages")
}

model UserPhones {
  id     Int    @id @default(autoincrement())
  userId Int    @unique
  phone  String
  users  Users  @relation(fields: [userId], references: [id])

  @@map("userPhones")
}

model UserAdress {
  id     Int    @id @default(autoincrement())
  userId Int    @unique
  adress String
  users  Users  @relation(fields: [userId], references: [id])

  @@map("userAdress")
}

model ProductsMarkets {
  id            Int          @id @default(autoincrement())
  productId     Int
  supermarketId Int
  price         Float
<<<<<<< HEAD
=======
  product       Products     @relation(fields: [productId], references: [id])
  supermarket   Supermarkets @relation(fields: [supermarketId], references: [id])
>>>>>>> 9850a1cff27b347014ce607076985b18b13b7410

  @@map("productsMarkets")
}

model Purchases {
  id        Int      @id @default(autoincrement())
<<<<<<< HEAD
  product   Products @relation(fields: [productId], references: [id])
  productId Int
  user      Users    @relation(fields: [userId], references: [id])
  userId    Int
=======
  userId    Int
  productId Int
  products  Products @relation("productsTopurchases", fields: [productId], references: [id])
  user      Users    @relation(fields: [userId], references: [id])
>>>>>>> 9850a1cff27b347014ce607076985b18b13b7410

  @@map("purchases")
}

model Historic {
  id               Int   @id @default(autoincrement())
  userId           Int
  quantifyProducts Int
  purchaseValue    Float

  @@map("hisoric")
}
